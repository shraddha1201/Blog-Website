{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\web development\\\\New folder (2)\\\\client\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport 'react-quill/dist/quill.snow.css';\nimport ReactQuill from 'react-quill';\nimport { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst modules = {\n  toolbar: [[{\n    header: [1, 2, false]\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }, {\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], ['link', 'image'], ['clean']]\n};\nexport default function CreatePost() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function createNewPost(ev) {\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('file', files[0]); //not files as selecting many file we will be taking first file only\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/post ', {\n      method: 'POST',\n      body: data,\n      credentials: 'include'\n    });\n    if (response.ok) {\n      setRedirect(true);\n    }\n  } //for this need to create endpoint for our create post request\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createNewPost,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"title\",\n        placeholder: 'Title',\n        value: title,\n        onChange: ev => setTitle(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"summary\",\n        placeholder: 'Summary',\n        value: summary,\n        onChange: ev => setSummary(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: ev => setFiles(ev.target.files)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: content,\n        onChange: newValue => setContent(newValue),\n        modules: modules\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(CreatePost, \"uH9cWkN4Y+ABAVoVYnL+MpbmdCg=\");\n_c = CreatePost;\n;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["ReactQuill","useState","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","modules","toolbar","header","list","indent","CreatePost","_s","title","setTitle","summary","setSummary","content","setContent","files","setFiles","redirect","setRedirect","createNewPost","ev","data","FormData","set","preventDefault","response","fetch","method","body","credentials","ok","to","fileName","_jsxFileName","lineNumber","columnNumber","children","onSubmit","type","placeholder","value","onChange","target","newValue","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/web development/New folder (2)/client/src/pages/CreatePost.js"],"sourcesContent":["import 'react-quill/dist/quill.snow.css';\r\nimport ReactQuill from 'react-quill';\r\nimport { useState } from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\n\r\nconst modules = {\r\n    toolbar: [\r\n      [{ header: [1, 2, false] }],\r\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n      [\r\n        { list: 'ordered' },\r\n        { list: 'bullet' },\r\n        { indent: '-1' },\r\n        { indent: '+1' },\r\n      ],\r\n      ['link', 'image'],\r\n      ['clean'],\r\n    ],\r\n  };\r\n\r\nexport default function CreatePost(){\r\n    const [title,setTitle]=useState('');\r\n    const [summary,setSummary]=useState('');\r\n    const [content,setContent]=useState('');\r\n    const [files,setFiles]=useState('');\r\n    const [redirect,setRedirect]=useState(false);\r\n\r\n    async function createNewPost(ev){\r\n        const data= new FormData();\r\n        data.set('title',title);\r\n        data.set('summary',summary);\r\n        data.set('content',content);\r\n        data.set('file',files[0]);//not files as selecting many file we will be taking first file only\r\n        ev.preventDefault();\r\n        const response= await fetch('http://localhost:4000/post ',{\r\n            method: 'POST',\r\n            body: data,\r\n            credentials: 'include',\r\n        })\r\n\r\n        if(response.ok){\r\n            setRedirect(true);\r\n        }\r\n    }//for this need to create endpoint for our create post request\r\n    \r\n    \r\n    if(redirect){\r\n        return <Navigate to={'/'}/>\r\n    }\r\n    return <>\r\n        <form onSubmit={createNewPost}>\r\n            <input type=\"title\" placeholder={'Title'} value={title} onChange={ev=>setTitle(ev.target.value)}/>\r\n            <input type=\"summary\" placeholder={'Summary'} value={summary} onChange={ev=>setSummary(ev.target.value)}/>\r\n            <input type=\"file\" onChange={ev=>setFiles(ev.target.files)}/>\r\n            <ReactQuill value={content} onChange={newValue=>setContent(newValue) } modules={modules}/>\r\n            <button>Create Post</button>\r\n        </form>\r\n    </>\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}