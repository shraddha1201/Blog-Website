{"ast":null,"code":"var ignoreRoot = require('ignore-by-default').directories();\n\n// default options for config.options\nconst defaults = {\n  restartable: 'rs',\n  colours: true,\n  execMap: {\n    py: 'python',\n    rb: 'ruby',\n    ts: 'ts-node'\n    // more can be added here such as ls: lsc - but please ensure it's cross\n    // compatible with linux, mac and windows, or make the default.js\n    // dynamically append the `.cmd` for node based utilities\n  },\n  ignoreRoot: ignoreRoot.map(_ => `**/${_}/**`),\n  watch: ['*.*'],\n  stdin: true,\n  runOnChangeOnly: false,\n  verbose: false,\n  signal: 'SIGUSR2',\n  // 'stdout' refers to the default behaviour of a required nodemon's child,\n  // but also includes stderr. If this is false, data is still dispatched via\n  // nodemon.on('stdout/stderr')\n  stdout: true,\n  watchOptions: {}\n};\nif ((process.env.NODE_OPTIONS || '').includes('--loader')) {\n  delete defaults.execMap.ts;\n}\nmodule.exports = defaults;","map":{"version":3,"names":["ignoreRoot","require","directories","defaults","restartable","colours","execMap","py","rb","ts","map","_","watch","stdin","runOnChangeOnly","verbose","signal","stdout","watchOptions","process","env","NODE_OPTIONS","includes","module","exports"],"sources":["C:/Users/DELL/node_modules/nodemon/lib/config/defaults.js"],"sourcesContent":["var ignoreRoot = require('ignore-by-default').directories();\n\n// default options for config.options\nconst defaults = {\n  restartable: 'rs',\n  colours: true,\n  execMap: {\n    py: 'python',\n    rb: 'ruby',\n    ts: 'ts-node',\n    // more can be added here such as ls: lsc - but please ensure it's cross\n    // compatible with linux, mac and windows, or make the default.js\n    // dynamically append the `.cmd` for node based utilities\n  },\n  ignoreRoot: ignoreRoot.map((_) => `**/${_}/**`),\n  watch: ['*.*'],\n  stdin: true,\n  runOnChangeOnly: false,\n  verbose: false,\n  signal: 'SIGUSR2',\n  // 'stdout' refers to the default behaviour of a required nodemon's child,\n  // but also includes stderr. If this is false, data is still dispatched via\n  // nodemon.on('stdout/stderr')\n  stdout: true,\n  watchOptions: {},\n};\n\nif ((process.env.NODE_OPTIONS || '').includes('--loader')) {\n  delete defaults.execMap.ts;\n}\n\nmodule.exports = defaults;\n"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,mBAAmB,CAAC,CAACC,WAAW,CAAC,CAAC;;AAE3D;AACA,MAAMC,QAAQ,GAAG;EACfC,WAAW,EAAE,IAAI;EACjBC,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE;IACPC,EAAE,EAAE,QAAQ;IACZC,EAAE,EAAE,MAAM;IACVC,EAAE,EAAE;IACJ;IACA;IACA;EACF,CAAC;EACDT,UAAU,EAAEA,UAAU,CAACU,GAAG,CAAEC,CAAC,IAAM,MAAKA,CAAE,KAAI,CAAC;EAC/CC,KAAK,EAAE,CAAC,KAAK,CAAC;EACdC,KAAK,EAAE,IAAI;EACXC,eAAe,EAAE,KAAK;EACtBC,OAAO,EAAE,KAAK;EACdC,MAAM,EAAE,SAAS;EACjB;EACA;EACA;EACAC,MAAM,EAAE,IAAI;EACZC,YAAY,EAAE,CAAC;AACjB,CAAC;AAED,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,YAAY,IAAI,EAAE,EAAEC,QAAQ,CAAC,UAAU,CAAC,EAAE;EACzD,OAAOnB,QAAQ,CAACG,OAAO,CAACG,EAAE;AAC5B;AAEAc,MAAM,CAACC,OAAO,GAAGrB,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}