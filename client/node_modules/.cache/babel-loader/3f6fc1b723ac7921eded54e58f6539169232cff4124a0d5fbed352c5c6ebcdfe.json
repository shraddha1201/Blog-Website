{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\web development\\\\New folder (2)\\\\client\\\\src\\\\pages\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport ReactQuill from 'react-quill';\nimport { useState, useEffect } from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport Editor from '../Editor';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditPost() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  useEffect(() => {\n    fetch(`http://localhost:4000/post/${id}`).then(response => {\n      response.json().then(postInfo => {\n        setTitle(postInfo.title);\n        setContent(postInfo.content);\n        setSummary(postInfo.summary);\n      });\n    });\n  }, []);\n  async function updatePost(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('id', id);\n    if (files !== null && files !== void 0 && files[0]) {\n      data.set('file', files === null || files === void 0 ? void 0 : files[0]);\n    }\n    const response = await fetch('http://localhost:4000/post', {\n      method: 'PUT',\n      body: data,\n      credentials: 'include'\n    });\n    if (response.ok) {\n      setRedirect(true);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/post/' + id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updatePost,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"title\",\n        placeholder: 'Title',\n        value: title,\n        onChange: ev => setTitle(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"summary\",\n        placeholder: 'Summary',\n        value: summary,\n        onChange: ev => setSummary(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: ev => setFiles(ev.target.files)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        onChange: setContent,\n        value: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: '5px'\n        },\n        children: \"Update Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(EditPost, \"zbQBWoLbDBKKfbyNa+PE/Y1Qo/w=\", false, function () {\n  return [useParams];\n});\n_c = EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["ReactQuill","useState","useEffect","Navigate","useParams","Editor","jsxDEV","_jsxDEV","Fragment","_Fragment","EditPost","_s","id","title","setTitle","summary","setSummary","content","setContent","files","setFiles","redirect","setRedirect","fetch","then","response","json","postInfo","updatePost","ev","preventDefault","data","FormData","set","method","body","credentials","ok","to","fileName","_jsxFileName","lineNumber","columnNumber","children","onSubmit","type","placeholder","value","onChange","target","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/web development/New folder (2)/client/src/pages/EditPost.js"],"sourcesContent":["import ReactQuill  from 'react-quill';\r\nimport { useState,useEffect } from 'react';\r\nimport {Navigate, useParams} from 'react-router-dom';\r\nimport Editor from '../Editor';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nexport default function EditPost(){\r\n    const {id}=useParams();\r\n    const [title,setTitle]=useState('');\r\n    const [summary,setSummary]=useState('');\r\n    const [content,setContent]=useState('');\r\n    const [files,setFiles]=useState('');\r\n    const [redirect,setRedirect]=useState(false);\r\n    \r\n    useEffect(()=>{\r\n        fetch(`http://localhost:4000/post/${id}`)\r\n        .then(response =>{\r\n            response.json().then(postInfo=>{\r\n                setTitle(postInfo.title);\r\n                setContent(postInfo.content);\r\n                setSummary(postInfo.summary);\r\n            });\r\n        });\r\n    },[]);\r\n\r\n\r\n    async function updatePost(ev){\r\n        ev.preventDefault();\r\n        const data=new FormData();\r\n        data.set('title',title);\r\n        data.set('summary',summary);\r\n        data.set('content',content);\r\n        data.set('id',id);\r\n        if(files?.[0])\r\n        {data.set('file',files?.[0]);}\r\n        \r\n        const response=await fetch('http://localhost:4000/post',{\r\n            method:'PUT',\r\n            body: data,\r\n            credentials: 'include',\r\n        });\r\n        if(response.ok)\r\n        {setRedirect(true);}\r\n    }\r\n\r\n    if(redirect){\r\n        return <Navigate to={'/post/'+id}/>\r\n    }\r\n\r\n\r\n    return <>\r\n        <form onSubmit={updatePost}>\r\n            <input type=\"title\" placeholder={'Title'} value={title} onChange={ev=>setTitle(ev.target.value)}/>\r\n            <input type=\"summary\" placeholder={'Summary'} value={summary} onChange={ev=>setSummary(ev.target.value)}/>\r\n            <input type=\"file\" onChange={ev=>setFiles(ev.target.files)}/>\r\n            <Editor  onChange={setContent} value={content}/>\r\n            <button style={{marginTop:'5px'}}>Update Post</button>\r\n        </form>\r\n    </>;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}