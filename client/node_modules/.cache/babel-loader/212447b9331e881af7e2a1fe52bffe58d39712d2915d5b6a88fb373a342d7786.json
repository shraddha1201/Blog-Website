{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\web development\\\\New folder (2)\\\\client\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport 'react-quill/dist/quill.snow.css';\nimport ReactQuill from 'react-quill';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreatePost() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [files, setFiles] = useState('');\n  async function createNewPost(ev) {\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('file', files[0]); //not files as selecting many file we will be taking first file only\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/post ', {\n      method: 'POST',\n      body: data\n    });\n  } //for this need to create endpoint for our create post request\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createNewPost,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"title\",\n        placeholder: 'Title',\n        value: title,\n        onChange: ev => setTitle(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"summary\",\n        placeholder: 'Summary',\n        value: summary,\n        onChange: ev => setSummary(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: ev => setFiles(ev.target.files)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        value: content,\n        onChange: newValue => setContent(newValue)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(CreatePost, \"UMwh6C3dgizMPBdhcVdrt/KvAQY=\");\n_c = CreatePost;\n;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["ReactQuill","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CreatePost","_s","title","setTitle","summary","setSummary","content","setContent","files","setFiles","createNewPost","ev","data","FormData","set","preventDefault","response","fetch","method","body","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","newValue","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/web development/New folder (2)/client/src/pages/CreatePost.js"],"sourcesContent":["import 'react-quill/dist/quill.snow.css';\r\nimport ReactQuill from 'react-quill';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport default function CreatePost(){\r\n    const [title,setTitle]=useState('');\r\n    const [summary,setSummary]=useState('');\r\n    const [content,setContent]=useState('');\r\n    const [files,setFiles]=useState('');\r\n   \r\n    async function createNewPost(ev){\r\n        const data= new FormData();\r\n        data.set('title',title);\r\n        data.set('summary',summary);\r\n        data.set('content',content);\r\n        data.set('file',files[0]);//not files as selecting many file we will be taking first file only\r\n        ev.preventDefault();\r\n        const response= await fetch('http://localhost:4000/post ',{\r\n            method: 'POST',\r\n            body: data,\r\n        })\r\n    }//for this need to create endpoint for our create post request\r\n    return <>\r\n        <form onSubmit={createNewPost}>\r\n            <input type=\"title\" placeholder={'Title'} value={title} onChange={ev=>setTitle(ev.target.value)}/>\r\n            <input type=\"summary\" placeholder={'Summary'} value={summary} onChange={ev=>setSummary(ev.target.value)}/>\r\n            <input type=\"file\" onChange={ev=>setFiles(ev.target.files)}/>\r\n            <ReactQuill value={content} onChange={newValue=>setContent(newValue)} />\r\n            <button>Create Post</button>\r\n        </form>\r\n    </>\r\n};"],"mappings":";;AAAA,OAAO,iCAAiC;AACxC,OAAOA,UAAU,MAAM,aAAa;AACpC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGjC,eAAe,SAASC,UAAUA,CAAA,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACS,OAAO,EAACC,UAAU,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACW,OAAO,EAACC,UAAU,CAAC,GAACZ,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACa,KAAK,EAACC,QAAQ,CAAC,GAACd,QAAQ,CAAC,EAAE,CAAC;EAEnC,eAAee,aAAaA,CAACC,EAAE,EAAC;IAC5B,MAAMC,IAAI,GAAE,IAAIC,QAAQ,CAAC,CAAC;IAC1BD,IAAI,CAACE,GAAG,CAAC,OAAO,EAACZ,KAAK,CAAC;IACvBU,IAAI,CAACE,GAAG,CAAC,SAAS,EAACV,OAAO,CAAC;IAC3BQ,IAAI,CAACE,GAAG,CAAC,SAAS,EAACR,OAAO,CAAC;IAC3BM,IAAI,CAACE,GAAG,CAAC,MAAM,EAACN,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1BG,EAAE,CAACI,cAAc,CAAC,CAAC;IACnB,MAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAC,6BAA6B,EAAC;MACtDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEP;IACV,CAAC,CAAC;EACN,CAAC;EACD,oBAAOf,OAAA,CAAAE,SAAA;IAAAqB,QAAA,eACHvB,OAAA;MAAMwB,QAAQ,EAAEX,aAAc;MAAAU,QAAA,gBAC1BvB,OAAA;QAAOyB,IAAI,EAAC,OAAO;QAACC,WAAW,EAAE,OAAQ;QAACC,KAAK,EAAEtB,KAAM;QAACuB,QAAQ,EAAEd,EAAE,IAAER,QAAQ,CAACQ,EAAE,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAClGjC,OAAA;QAAOyB,IAAI,EAAC,SAAS;QAACC,WAAW,EAAE,SAAU;QAACC,KAAK,EAAEpB,OAAQ;QAACqB,QAAQ,EAAEd,EAAE,IAAEN,UAAU,CAACM,EAAE,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC1GjC,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACG,QAAQ,EAAEd,EAAE,IAAEF,QAAQ,CAACE,EAAE,CAACe,MAAM,CAAClB,KAAK;MAAE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC7DjC,OAAA,CAACH,UAAU;QAAC8B,KAAK,EAAElB,OAAQ;QAACmB,QAAQ,EAAEM,QAAQ,IAAExB,UAAU,CAACwB,QAAQ;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxEjC,OAAA;QAAAuB,QAAA,EAAQ;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B;EAAC,gBACT,CAAC;AACP;AAAC7B,EAAA,CA3BuBD,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AA2BjC;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}