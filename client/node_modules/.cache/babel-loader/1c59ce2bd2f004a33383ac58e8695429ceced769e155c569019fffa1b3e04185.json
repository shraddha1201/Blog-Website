{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\web development\\\\New folder (2)\\\\client\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  async function register(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.status === 200) {\n      alert('registration sucessful');\n    } else {\n      alert('registration failed');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register\",\n      onSubmit: register,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Register, \"1VH1WKtCY4wEF2iBjlvknCiq3BE=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","username","setUsername","password","setPassword","register","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","status","alert","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","event","target","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/web development/New folder (2)/client/src/pages/Register.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function Register(){\r\n    const[username,setUsername]= useState('');\r\n    const[password,setPassword]= useState('');\r\n    async function register(ev)\r\n    { \r\n        ev.preventDefault();\r\n        const response=await fetch('http://localhost:4000/register', {\r\n            method: 'POST',\r\n            body: JSON.stringify({username,password}),\r\n            headers: {'Content-Type':'application/json'},\r\n        });\r\n\r\n        if(response.status=== 200){\r\n            alert('registration sucessful');\r\n        }else{\r\n            alert('registration failed');\r\n        }\r\n    }\r\n    return<>\r\n        <form className=\"register\" onSubmit={register}>\r\n            <h1>Register</h1>\r\n            <input type=\"text\" placeholder=\"username\" value={username} onChange={event=>setUsername(event.target.value)}/>\r\n            <input type=\"password\" placeholder=\"password\" value={password} onChange={event=>setPassword(event.target.value)}/>\r\n            <button>Register</button>\r\n        </form>\r\n    </>\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,eAAe,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAC9B,MAAK,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAER,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAK,CAACS,QAAQ,EAACC,WAAW,CAAC,GAAEV,QAAQ,CAAC,EAAE,CAAC;EACzC,eAAeW,QAAQA,CAACC,EAAE,EAC1B;IACIA,EAAE,CAACC,cAAc,CAAC,CAAC;IACnB,MAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MACzDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACZ,QAAQ;QAACE;MAAQ,CAAC,CAAC;MACzCW,OAAO,EAAE;QAAC,cAAc,EAAC;MAAkB;IAC/C,CAAC,CAAC;IAEF,IAAGN,QAAQ,CAACO,MAAM,KAAI,GAAG,EAAC;MACtBC,KAAK,CAAC,wBAAwB,CAAC;IACnC,CAAC,MAAI;MACDA,KAAK,CAAC,qBAAqB,CAAC;IAChC;EACJ;EACA,oBAAMpB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACFrB,OAAA;MAAMsB,SAAS,EAAC,UAAU;MAACC,QAAQ,EAAEd,QAAS;MAAAY,QAAA,gBAC1CrB,OAAA;QAAAqB,QAAA,EAAI;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjB3B,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,UAAU;QAACC,KAAK,EAAEzB,QAAS;QAAC0B,QAAQ,EAAEC,KAAK,IAAE1B,WAAW,CAAC0B,KAAK,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC9G3B,OAAA;QAAO4B,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,UAAU;QAACC,KAAK,EAAEvB,QAAS;QAACwB,QAAQ,EAAEC,KAAK,IAAExB,WAAW,CAACwB,KAAK,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAClH3B,OAAA;QAAAqB,QAAA,EAAQ;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC,gBACT,CAAC;AACP;AAACvB,EAAA,CA1BuBD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}